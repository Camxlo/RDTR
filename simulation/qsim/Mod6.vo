// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "01/25/2023 21:21:38"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Mod6 (
	Q0,
	Entrada,
	Q1,
	Q2);
output 	Q0;
input 	Entrada;
output 	Q1;
output 	Q2;

// Design Ports Information
// Q0	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q1	=>  Location: PIN_M7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Q2	=>  Location: PIN_P5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Entrada	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Q0~output_o ;
wire \Q1~output_o ;
wire \Q2~output_o ;
wire \Entrada~input_o ;
wire \inst~0_combout ;
wire \inst~feeder_combout ;
wire \inst1~0_combout ;
wire \inst1~q ;
wire \inst2~0_combout ;
wire \inst2~q ;
wire \inst6~combout ;
wire \inst~q ;


// Location: IOOBUF_X0_Y8_N16
cycloneiii_io_obuf \Q0~output (
	.i(\inst~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q0~output_o ),
	.obar());
// synopsys translate_off
defparam \Q0~output .bus_hold = "false";
defparam \Q0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N23
cycloneiii_io_obuf \Q1~output (
	.i(\inst1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q1~output_o ),
	.obar());
// synopsys translate_off
defparam \Q1~output .bus_hold = "false";
defparam \Q1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N9
cycloneiii_io_obuf \Q2~output (
	.i(\inst2~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q2~output_o ),
	.obar());
// synopsys translate_off
defparam \Q2~output .bus_hold = "false";
defparam \Q2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y8_N1
cycloneiii_io_ibuf \Entrada~input (
	.i(Entrada),
	.ibar(gnd),
	.o(\Entrada~input_o ));
// synopsys translate_off
defparam \Entrada~input .bus_hold = "false";
defparam \Entrada~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N30
cycloneiii_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = !\inst~q 

	.dataa(\inst~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'h5555;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N18
cycloneiii_lcell_comb \inst~feeder (
// Equation(s):
// \inst~feeder_combout  = \inst~0_combout 

	.dataa(gnd),
	.datab(\inst~0_combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \inst~feeder .lut_mask = 16'hCCCC;
defparam \inst~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N26
cycloneiii_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = !\inst1~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst1~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'h0F0F;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N15
dffeas inst1(
	.clk(!\inst~q ),
	.d(gnd),
	.asdata(\inst1~0_combout ),
	.clrn(!\inst6~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X2_Y8_N4
cycloneiii_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = !\inst2~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst2~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2~0 .lut_mask = 16'h0F0F;
defparam \inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X2_Y8_N5
dffeas inst2(
	.clk(!\inst1~q ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(!\inst6~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y8_N6
cycloneiii_lcell_comb inst6(
// Equation(s):
// \inst6~combout  = (\inst1~q  & \inst2~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst1~q ),
	.datad(\inst2~q ),
	.cin(gnd),
	.combout(\inst6~combout ),
	.cout());
// synopsys translate_off
defparam inst6.lut_mask = 16'hF000;
defparam inst6.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y8_N19
dffeas inst(
	.clk(!\Entrada~input_o ),
	.d(\inst~feeder_combout ),
	.asdata(vcc),
	.clrn(!\inst6~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

assign Q0 = \Q0~output_o ;

assign Q1 = \Q1~output_o ;

assign Q2 = \Q2~output_o ;

endmodule
